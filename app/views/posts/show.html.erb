<%= stylesheet_link_tag "welcome" %>


<div class = "post-container">
<h2><%= @post.title %></h2>

<p> <%= @post.body%> </p>

  <div>
    <%= link_to 'Edit', edit_post_path(@post),:class => {"btn btn-primary" => 'btn btn-primary'}%>
    |
    <%# 
      Regular HTML links can only make GET requests. "link_to"
      allows us to use other verbs such as DELETE. We pass a named
      argument called "method" with the symbol of the HTTP verb as
      an argument. If you confirm with the dialog then it will 
      make the request.
    %>
    <%= link_to(
        'Delete', 
        post_path(@post),
        method: :delete,
        data: { confirm: "Are you sure you want to delete this post?"},
        :class => {"btn btn-primary" => 'btn btn-primary'}
      ) 
    %>
  </div>
</div>


<%= form_with model: [@post], local: true do |form| %>
  <% if @comment.errors.present? %>
    <p>
      <%= comments.errors.full_messages.join(", ") %>
    </p>
  <% end %>
  <div>
    <%= form.text_area(
      :body,
      cols: 50,
      rows: 5,
      placeholder: "Provide an Comment..."
    ) %>
  </div>
  <%= form.submit "Comment" %>
<% end %>

<%# 
  When two instances are added to model, it will generate a nested 
  resource route e.g. post_posts_path(@question). If the @answer 
  is not peristed, request will be a POST, and if it is then it will be a PATCH. 
%>

<ul class = "outline-show-page">
  <% @comments.each do |comment| %>
    <li>
      <p>
        <%= comment.body %> <br>
        <small>
        <%= link_to(
          'Delete', 
          comment_path(comment),
          method: :delete,
          data: { confirm: "Are you sure?" }
        ) %>
      </p>
    </li>
  <% end %>
</ul>

